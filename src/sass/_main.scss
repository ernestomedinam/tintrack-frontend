*, *::after, *::before {
    margin: 0;
    padding: 0;
}
.no-text-style {
    color: inherit;
    text-decoration: inherit;
    &:focus, &:hover, &:visited, &:link, &:active {
        color: inherit;
        text-decoration: inherit;
    }
}

// declare variables and mixins; if enough of them are
// declared, create a 'base' folder and files for them.

// variables
$purple-tin: rgba($color: #7B87CC, $alpha: 1);
$blue-tin: rgba($color: #009AFF, $alpha: 1);
$background-tin: rgba($color: #468DB9, $alpha: 1);
$white-tin: rgba($color: #FFF, $alpha: 0.6);

// mixins
// build flex containers
@mixin build-flex($flow, $wrap) {
    display: flex;
    flex-flow: $flow;
    flex-wrap: $wrap;
}
// use background image
@mixin tintrack-bg-image() {
    margin: 0;
    padding: 0;
    background-image: linear-gradient(
        to right bottom,
        rgba($color: $purple-tin, $alpha: 0.3),
        rgba($color: $blue-tin, $alpha: 0.3)),
        url("../../assets/img/backgrounds/loginBg.png");
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}


// uncomment code ahead to edit boostrap styles
// and variables, like changing theme colors.
// do not add code for this purpose under the @import
// as it will not be taken into account.
// also, if you add bootstrap scss here, you need to
// comment bootstrap import on index.js, as it would
// otherwise retain priority over this import.

// change theme warning color from orange to primary blue
// $theme-colors: (
//     "warning": #0074D9
// );

// import boostrap scss
@import "../../node_modules/bootstrap/scss/bootstrap.scss";

// declare animations and utility classes that will be
// used by many components and views; if enough of them
// are declared, create a 'helpers' folder and files for
// them.

// animations
@keyframes load8 {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

// utility classes and styles
.view-loader {
    position: absolute;
    top: calc(50% - 4rem);
    left: calc(50% - 4rem);
    width: 8rem;
    height: 8rem;
    border: 1rem solid rgba($color: #333745, $alpha: 0.4);
    border-left: 1rem solid #333745;
    border-radius: 50%;
    animation: load8 1s infinite linear;
    transition: opacity 0.3s;
}
.tin-wrapper {
    @include build-flex(column, wrap);
    min-height: 68vh;
    padding-top: 2rem;
    padding-bottom: 2rem;
}
.delete-button {
    position: absolute;
    bottom: 0%;
    left: 100%;
    width: 24px;
    height: 24px;
    background-color: red;
    color: white;
    border: 2px solid white;
    border-radius: 50%;
    opacity: 1;
    transform: translate(-2.25rem, -3rem);
    @include media-breakpoint-up(md) {
        opacity: 0.3;
    }
    &-msg {
        display: none;
        color: white;
        position: absolute;
        top: 0;
        right: 0;
        width: max-content;
        transform: translate(-2rem, -3px);
    }
    &:hover {
        opacity: 1;
        transform: translate(-2.25rem, -3rem);
        .delete-button-msg {
            display: inline;
            transform: translate(-2rem, -3px);
        }
    }
    &::before, &::after {
        position: absolute;
        top: 0%;
        left: 0%;
        content: ' ';
        height: 14px;
        width: 3px;
        background-color: white;
    }
    &::before {
        transform: translate(9px, 3px) rotate(45deg);
    }
    &::after {
        transform: translate(9px, 3px) rotate(-45deg);
    }
}